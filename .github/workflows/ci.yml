name: CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4               # 1) 코드 가져오기

      - uses: pnpm/action-setup@v4              # 2) PNPM 설치 (package.json의 packageManager 사용)
      - uses: actions/setup-node@v4             #    Node 20 + pnpm 캐시
        with:
          node-version: 20
          cache: pnpm

      - run: pnpm install --frozen-lockfile     # 3) 의존성 (정확한 버전)

      # 환경 변수 설정 (필요시)
      - name: Create .env file
        run: |
          echo "NODE_ENV=production" > .env
          echo "NEXT_PUBLIC_APP_ENV=ci" >> .env

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            .next/standalone
            .next/static
          key: ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-

      # 4) 타입체크·빌드
      - name: Type check
        run: pnpm exec tsc --noEmit           # TypeScript 타입 체크
      
      - name: Build application
        run: pnpm run build                   # Next.js 빌드
        env:
          NODE_ENV: production
